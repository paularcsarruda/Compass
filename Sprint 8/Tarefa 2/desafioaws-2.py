# -*- coding: utf-8 -*-
"""DesafioAWS.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CCnU25kLAWYd2A-_hAiN6Xl6V86BYg5Y
"""

import os
import requests
import boto3
import io
import json
import tempfile
import datetime
import pandas as pd

def lambda_handler(event, context):
    # Chaves de acesso
    api_key = os.environ['api_key']
    aws_access_key_id = os.environ['aws_access_key_id']
    aws_secret_access_key = os.environ['aws_secret_access_key']
    aws_session_token = os.environ['aws_session_token']
    bucket = 'desafioaws'  # Nome do bucket S3

    # IDs e Listas
    movies_id = ['8966', '24021', '18239', '50619', '50620']  # IDs dos filmes
    actors_id = ['37917', '11288', '84214']  # IDs dos atores

    data_movies = []
    data_actors = []

    for movie_id in movies_id:
        url = f'https://api.themoviedb.org/3/movie/{movie_id}?api_key={api_key}&language=en-US'
        response = requests.get(url)
        movie_data = response.json()

        # Seleciona os recursos
        df_movie = {
            'id': movie_data['id'],
            'Titulo': movie_data['title'],
            'Votos': movie_data['vote_count'],
            'Média de votos': movie_data['vote_average'],
            'Popularidade': movie_data['popularity'],
            'Data de Lançamento': movie_data['release_date'],
            'Orçamento': movie_data['budget'],
            'Faturamento': movie_data['revenue']
        }

        data_movies.append(df_movie)

    df_movies = pd.DataFrame(data_movies)

    # Configura o cliente S3
    s3 = boto3.client(
         's3',
         aws_access_key_id=aws_access_key_id,
         aws_secret_access_key=aws_secret_access_key,
         aws_session_token=aws_session_token,
         region_name='us-east-1'
    )

    # Cria o arquivo JSON
    temp_dir = tempfile.mkdtemp()
    temp_caminho = f"{temp_dir}/dados.json"

    with open(temp_caminho, "w") as arquivo_json:
        json.dump(data_movies, arquivo_json)

    # Data e Data formatada
    current_date = datetime.datetime.now()
    format_date = current_date.strftime('%Y/%m/%d/')

    folder_movies = f'Raw/TMDB/JSON/{format_date}'

    # Upload o arquivo JSON para o S3
    s3_caminho_arquivo = folder_movies + "/dados.json"
    s3.upload_file(temp_caminho, bucket, s3_caminho_arquivo)

    # Retorna resposta
    return {
        'statusCode': 200,
        'body': json.dumps('Ingestao de dados completa!')
    }